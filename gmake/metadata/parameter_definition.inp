###################################################################################################
@ comments              #   notes in a comment section
###################################################################################################

###################################################################################################
@ component             #   available keywords with default values in a model "component" section
###################################################################################################

## keyword              default     format  type    #   format is only for controlling the decimal point in the log output

object                  ''          ''      str     #   object name (just a note for you, not used for anything)
name                    ''          ''      str     #   component name (just a note for you, not used for anything)
note                    ''          ''      str     #   comments on the object (just a note for you, not used for anything)

image                   ''          ''      str     #   data image name (separated by a comma if more than one are supplied)
error                   ''          ''      str     #   error image name (separated by a comma if more than one are supplied)
mask                    ''          ''      str     #   mask image name (separated by a comma if more than one are supplied)
psf                     ''          ''      str     #   psf image name (separated by a comma if more than one are supplied)
bmaj                    None        ''      float   #   bmaj, for overriding whatever in the image header 
bmin                    None        ''      float   #   bmaj, for overriding whatever in the image header
bpa                     None        ''      float   #   bmaj, for overriding whatever in the image header
samp                    ''          ''      str     #   sampling table

vis                     ''          ''      str     #   vis-ms name (separated by a comma if more than one are supplied)

pmodel                  ''          ''      str     #   prior image name (separated by a comma if more than one are supplied)

type                    ''          ''      str     #   not implemented yet
xypos                   [0.0,0.0]   '.7f'   list    #   [ra,dec] in degree
xypos_kin               [0.0,0.0]   '.7f'   list    #   [ra,dec] in degree for the kinematical center if different from the geometric center

z                       0.0         '.3f'   float   #   redshift
vsys                    0.0         '.2f'   float   #   km/s galaxy systematic velocity in respective to the redshift


sbrp                    [1.0,1.0]   '.2f'   list    #   surface brightness radial profile in the disk plane (method='kinmspy') or sky-plane (method='disk2d')
                                                    #   if a list is provided:
                                                    #       a sersic radial profile is provided, and sbrp=[half-light-radius, sersic-index]
                                                    #   if a tuple is provided:
                                                    #       (math_expr/options,p1,p2...)    :   tuple
                                                    #   examples:
                                                    #       +   a sersic1d profile
                                                    #           sbrp <<< ('exp(-(r/p1)^(1/p2)=1)',re,n)
                                                    #                <<< ('sersic',re,n)    # built-in shortcut
ge_pa                   90.0        '.2f'   float   #
ge_q                    2.0         '.2f'   float   #
                                                                                                        
pa                      0.0         '.2f'   float   #   Pa of the receding half major axis of the projected disk plane
inc                     0.0         '.2f'   float   #   disk plane inclination                                                    
                                                        
sbser                   [1.0,1.0]   '.2f'   list    #  

intflux                 1.0         '.2f'   float   #   Jy x km/s or dataunits * angstrom

restwave                1000.0      ''      float   #   line rest wavelength (angstrom)
restfreq                100.0       ''      float   #   Ghz line rest frequency

type                    'disk3d'    ''      str     #   choice simulation algorithm 
                                                    #   current options: 
                                                    #       disk2d  for simulating a Sersic disk
                                                    #       disk3d  for simulating spectral cube from a tilted-ring model



####    method='kinmspy'

sbvp                    0.0         '.2f'   float   #   disk surface brightness vertical profile
                                                    #   thickness characteriztion (default to I(z)=exp(-z^2/hz^2.0))
                                                    #   when a tuple is provided, expect: sbvp=(math_expr/options,p1,p2...) 
                                                    #           + a Gaussian profile I(z)=exp(-z^2/2^hz^2)
                                                    #             sbvp <<< ('exp(-z^2/2/h^2)',hz)
                                                    #                  <<< ('gaussian',hz)  # built-in shortcut
                                                    #           + an exponential profile
                                                    #             sbvp <<< ('exp(-abs(h)/hz',hz)
                                                    #                  <<< ('exp',hz)       # built-in shortcut
                                                    #           + an sech^2 profile
                                                    #             sbvp <<< ('(sech(h/hz))^2',hz)  
                                                    #                  <<< ('sech',hz)      # built-in shortcut

vrad                    [0.0,0.1]   '.2f'   list    #   radial knots in galactocentric distance (for velocity and dispersion vector)

vrot                    [100,100]   '.2f'   list    #   rotational velocity radial profile
                                                    #
                                                    #   some "advanced" options available:
                                                    #
                                                    #   (math_expr/options,p1,p2...)    :   tuple
                                                    #   one can use math expressions to specify a descriptional RC (numpy supported),
                                                    #   or select the options of building RC from a mass-potential->dynamical model
                                                    #
                                                    #   math expression exmaples:
                                                    #        +  linear increasing to vmax=200 at 0.2" then flat RC
                                                    #           vrot <<< ("minimum(vard/p2,1)*p1",200,0.2)                                                    
                                                    #        +  vrot=2/pi*vmax*arctan(vrad/rt)
                                                    #           vrot <<< ('p1*2/pi*arctan(vrad/p2)',200,0.2)
                                                    #                <<< ('arctan',vmax,rt) # built-in shortcut
                                                    #        +  vrot=vmax*(1-exp(-vrad/rt))
                                                    #           vrot <<< ('p1*(1-exp(-vrad/p2))',200,0.2)
                                                    #                <<< ('exp',200,0.2)    # built-in shortcut
                                                    #        +  vrot=vmax*tanh(vrad/rt)
                                                    #           vrot <<< ('p1*tanh(vrad/p2)',200,0.2)
                                                    #                <<< ('tanh',200,0.2)   # built-in shortcut
                                                    #   dynamical model examples:
                                                    #        +  using a dynamical model specified from the parameter section 'halodisk'
                                                    #           vrot <<< ('dynamics','halodisk')
                                                    
vdis                    [10.0,10.0] '.2f'   list    #   velocity dispersion radial profile

####    method='disk2d'                                                    

alpha                   0.0         '.2f'   float   #   


###################################################################################################
@ keywords_section      #   a set of keywords can be "imported" into another section
###################################################################################################
                  
keyword_1               ''          ''      str     # 
keyword_2               ''          ''      str     # 
                                                                      
###################################################################################################
@ dynamics              #   keywords in the dynamics-prescription section
###################################################################################################

disk_sd                 0.0                 float   #   msun/kpc^2.0               
disk_rs                 1.0                 float   #   kpc

disk_sb2sd              ('object',1)        tuple   #   a mass distribution model based on the disk SB and a constant surface brightness-to-mass ratio
                                                    #   ('object_name',brightness-to-mass ratio)    
halo_ms                 5e10                float   #   msun
halo_a                  100.0               float   #   kpc
halo_conv               4.0                 float   #
halo_mvir               0.5                 float   #   10.^12 msun

###################################################################################################
@ optimize              #   keywords for the optimization configuration
###################################################################################################

method                  'amoeba'            str     #   underline parameter optimization algorithm
                                                    #   options: amoeba,lmfit-nm,lmfit-brute,emcee
niter                   100                 int     #   max iteration for parameter optimization                                                  
outname_replace         []                  list    #   list of two-element tuple
outname_exclude         []                  list    #   list of string
outdir                  'testdir'           str     #   output dir path

parname@objectname      ('o',-1,1,0.0)      tuple   #   3-/4-element tuple for a free parameter
                                                    #   this could be something like:
                                                    #   ('a',-100,100,1.0)  par-boundary = (-100,100) (a: "absolute" scaling)
                                                    #   ('o',-100,100,1.0)  par-boundary = (p_start-100,p_start+100) ("o": "offset" scaling)
                                                    #   ('r',0.2,2.0)       par-boundary = (p_start*0.2,p_start*2.0) ("r": "relative" scaling)
                                                    #   (-100,100,1.0)      if no scaling keyword is provided, default to "absolute" scaling

parname[a:b]@obectname  ('o',-1,1,0.0)      tuple   #   same as above, but a slicing index is applied when the parameter is an iteration object (e.g. vrot)
                                                    #   then all elements in the sliced parameter set is tied to be the same as a single free parameter
                                                    #   e.g., vrot[2:5]@co21disk: the rotational velocity of the third, fourth, fifth radial knots within disk object "co21disk"

###################################################################################################
@ analyze               #   available keywords for configuring diagnotsic analysis
###################################################################################################
