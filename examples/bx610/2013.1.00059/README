Atacama Large Millimeter/submillimeter Array (ALMA)

#####

Cycle: 2 (Early science)
Project code: 2013.1.00059.S
SB name: BX610_a_04_TE
PI name: Manuel Aravena
Project title: Resolving the molecular gas and dust in a unique star forming disk galaxy z~2
Configuration: max baseline 1.6 km
Proposed rms: 0.2 mJy in a 50 km/s channel and 0.29" beam
CASA version used for reduction: 4.3.1
Comments from Reducer:

This dataset has been calibrated by the pipeline. There is low overall
flagging (with 42 and 43 antennas being usable in the two executions). There
is a persistent feature in the bandpass solutions for SPW 23, one of the
continuum windows, which is coincident with an atmospheric line at 142.2 GHz;
the affected channels are left out of the continuum imaging. Flux calibration
was on Ceres, and there have been suggestions that the model
(Butler-JPL-Horizons 2012) for this calibrator may be incorrect. A comparison
of the fluxes of the observed sources to the ALMA calibrator catalog is
ambiguous, most likely due to variability, so the flux scale of this
observation should be considered uncertain by up to 20% until an improved
model for Ceres is available in a future version of CASA. The OT sensitivity 
estimate for the continuum image (11 uJy) agrees quite well with the measured
RMS (12 uJy), which is consistent with the flux scale error being <~20%.

The delivered continuum image uses line free channels in all four science
SPWs, leaving out noisy channels in science SPW 1 and the atmospheric line in
science SPW 3. The continuum is detected (rms 12 uJy, beam 0.35"x0.30"). The
delivered line images have been continuum subtracted and include all channels
in the line windows. The target is detected in the CI window in three channels
(5-105 km/s with outframe=topo, as requested) and in the CO 4-3 window in
eight channels (-145 to 205 km/s with outframe=topo, as requested). Per
channel clean boxes were drawn in both line cubes, and ~130-150 iterations of
clean were run in each case as noted in the script. 

#####

This file describes the content of the tar file you have received. The
full data structure is inserted below.

At this stage, we are releasing data after completion of one SB (excuted
multiple times if required), so you will find only one member_ouss_uid___A001_X12b_X23b_id
directory.  This directory contains this README file and the following
directories:calibration, script, qa2, log, product.

- 'calibration' contains the files needed for calibration starting from
the initial ms to the fully calibrated data. 
- 'script' contains the reduction scripts used to process the initial ms
to calibrated data, but also to obtain concatenated data (if more than
one execution) and imaging products.  There are usually several scripts
dealing with different parts of the processing.
In case the calibration was done by the automated pipeline, you will
also see the Pipeline Processing Request File (PPR).
The most important script for you is the "scriptForPI.py". See the
section "How to obtain a calibrated MeasurementSet (MS) for your data?"
further below. 
- 'product' contains the fits files of the selected image products. 
These will not include all images of scientific value, but will indicate
the quality of the calibration and images.
- 'qa' contains the qa2 reports that show plots and text information
needed to assess the quality of the processing.  The resultant image
rms, compared with that proposed, is given. In case the calibration was 
done by the automated pipeline, you will find the pipeline Weblog here.
- 'log' contains the CASA log files. 

For more information see also the "ALMA QA2 Data Products" document
which is available for download from the ALMA Science Portal at 
http://almascience.org/documents-and-tools/cycle-2/alma-qa2-products-v2.1 
and the ALMA Knowledgebase article on the QA2 pass/fail criteria at
https://help.almascience.org/index.php?/XX/Knowledgebase/Article/View/285 
(where the XX is to be replaced by ea, eu, or na depending on your location).

#####

TOTAL POWER DATA

The sections below are specific to interferometric data, obtained with
the ALMA 12m and 7m arrays. Please consider only this section in case of
total power (TP) data.

The present TP data were reduced manually, using standard scripts. At
this stage, the QA report is rudimentary. We will provide a more
exhaustive report when we start using the automated Pipeline. Until
then, users are encouraged to use the official CASA guide, available at
the following link:

https://casaguides.nrao.edu/index.php?title=M100_Band3_SingleDish_4.3

TP datasets will often consist of many execution blocks (EBs). Each of
them was fully calibrated individually. Imaging is done on all
calibrated data together.

One important aspect of the calibration is the conversion of the data
from K to Jy/beam. This is done per EB. The values that were used are
available at the end of each calibration script.

The conversion factors were derived from the analysis of the associated
AMPCAL data from the same project. This analysis is done using standard
scripts. We are not providing those data by default to the users, but in
case you would be interested to have them, you are welcome to contact
the helpdesk of your region.

To regenerate the calibrated data, you will need to download the raw
data (ASDMs) from the ALMA archive, remove the '.asdm.sdm' extensions
and then run the scripts ('*.scriptForSDcalibration.py') in the scripts
folder. We recommend that you create an individual folder for each ASDM,
and calibrate each ASDM in its own folder. Note that this is more work
than for ALMA interferometric data (where users need only apply
calibration tables to regenerate the calibrated data); it will be
simplified in future cycles.

For the imaging, we recommend you use the provided script, as it
contains certain values (e.g. beams) that must be set to a precise
value. You could run the script step-by-step, as for the calibration
script. Before doing that, you may need to update the paths to the
calibrated data, in the msNames variable near the top of the script.

#####

Primary beam correction

The images included in this delivery are corrected for the primary beam (PB),
i.e. the dependence of the instruments sensitivity on direction within the FOV.

For each image, two files are being delivered:
  a) the  PB-corrected image (file name ending in ".pbcor.fits")
  b) the image of the PB which was used in the correction (ending in ".flux.fits")
The image noise was measured in the uncorrected image.
The corrected image (a) was then obtained by dividing the uncorrected image by
the PB image (b).
The uncorrected image can be recovered using the CASA task impbcor in mode "m":
impbcor(imagename='image.pbcor.fits', pbimage='image.flux.fits', mode='m', 
        outfile='image.recovered')


#####

How to obtain a calibrated MeasurementSet (MS) for your data?

In case you want to re-reduce your data yourself, you will need to
obtain the raw data in ASDM format from the request handler or
other server where it is staged for you (see your notification 
email).

If you downloaded and untarred all available files for this delivery
as described in the notification email, then you will already see
(in addition to the directories shown in the tree listing above)
a directory "raw" containing your raw data in subdirectories
named "uid*.asdm.sdm" and no further action is necessary.

If you do not have a raw directory, yet, you will need to download
and untar the tar balls of the raw data belonging to this delivery
and make sure they are put into the "raw" directory in your
"member_ouss_uid___A001_X12b_X23b_..." directory.

Once the raw data is in place, cd into directory "script", start
 
   casapy --pipeline

and type

   execfile('scriptForPI.py')

(If you have not installed the CASA version with the ALMA pipeline
included, the "--pipeline" switch is not available.
Check in the "script" directory of your delivery package to see
if it contains a file named "PPR*.xml".
If there is no such file, you will be able to run the calibration
without the pipeline. Otherwise, you will have to install
the CASA version with pipeline.)

For more information on the execution of the pipeline please refer to
the ALMA Pipeline Quickstart Guide available at
http://almascience.org/documents-and-tools/cycle-2/alma-pipeline-quickstart-guide

Running the scriptForPI will execute the entire calibration procedure 
and result in an MS or a set of MSs ready for imaging. 

In case the data was processed using the automated pipeline,
scriptForPI.py will produce the calibrated MS(s) by running the
"casa_piperestorescript" which applies the packaged calibration
and flagging tables (rather then regenerating them).

The calibrated MS(s) can then be processed with "scriptForImaging.py".

The "scriptForImaging.py" may partially be interactive (for masking)
and should be executed by copy and paste.

The scriptForPI offers a "SPACESAVING" option to limit the disk space 
usage during and after its execution. In order to make use of this, 
the Python global variable SPACESAVING needs to be set before starting 
the script, e.g. using

  SPACESAVING = N
  execfile('scriptForPI.py')

where N is an integer from 0 to 3 with the following meaning:
SPACESAVING = 0 same as not set (all intermediate MSs are kept)
            = 1 do not keep intermediate MSs named *.ms.split
            = 2 do not keep intermediate MSs named *.ms and *.ms.split
            = 3 do not keep intermediate MSs named *.ms, *.ms.split,
                and *.ms.split.cal (if possible)

With SPACESAVING=0, the required additional diskspace is up to 14 times 
as large as the delivered data (products and rawdata) while with 
SPACESAVING=3 (maximum savings), it is up to 6 times as large. 
The script will estimate the required disk space and will not execute 
if there is not sufficient free space available.

#####



2013.1.00059.S
└── science_goal.uid___A001_X12b_X239
    └── group.uid___A001_X12b_X23a
        └── member.uid___A001_X12b_X23b
            ├── calibration
            │   ├── flux.csv
            │   ├── uid___A001_X12b_X23b.session_1.caltables.tar.gz
            │   ├── uid___A001_X12b_X23b.session_2.caltables.tar.gz
            │   ├── uid___A002_Xa48b1f_X3ca7_flagtemplate.txt
            │   ├── uid___A002_Xa48b1f_X3ca7.ms.calapply.txt
            │   ├── uid___A002_Xa48b1f_X3ca7.ms.flagversions.tar.gz
            │   ├── uid___A002_Xa4ce71_X1356_flagtemplate.txt
            │   ├── uid___A002_Xa4ce71_X1356.ms.calapply.txt
            │   └── uid___A002_Xa4ce71_X1356.ms.flagversions.tar.gz
            ├── log
            │   ├── casapy-20151014-141248.log
            │   ├── casapy-20151014-151305.log
            │   ├── casapy-20151014-151444.log
            │   ├── casapy-20151201-000346.log
            │   ├── casapy_concat.log
            │   └── uid___A001_X12b_X23b.casa_commands.log
            ├── product
            │   ├── BX610_CI.flux.fits
            │   ├── BX610_CI.mask
            │   ├── BX610_CI.pbcor.fits
            │   ├── BX610_CO_43.flux.fits
            │   ├── BX610_CO_43.mask
            │   ├── BX610_CO_43.pbcor.fits
            │   ├── calibrated_final_cont.flux.fits
            │   ├── calibrated_final_cont.mask
            │   ├── calibrated_final_cont.pbcor.fits
            │   ├── uid___A001_X12b_X23b.J0010+1058_ph.spw17.I.fits
            │   ├── uid___A001_X12b_X23b.J0010+1058_ph.spw19.I.fits
            │   ├── uid___A001_X12b_X23b.J0010+1058_ph.spw21.I.fits
            │   ├── uid___A001_X12b_X23b.J0010+1058_ph.spw23.I.fits
            │   ├── uid___A001_X12b_X23b.J2232+1143_bp.spw17.I.fits
            │   ├── uid___A001_X12b_X23b.J2232+1143_bp.spw19.I.fits
            │   ├── uid___A001_X12b_X23b.J2232+1143_bp.spw21.I.fits
            │   └── uid___A001_X12b_X23b.J2232+1143_bp.spw23.I.fits
            ├── qa
            │   └── uid___A001_X12b_X23b.weblog.tar.gz
            ├── README
            └── script
                ├── casa_piperestorescript.py
                ├── casa_pipescript.py
                ├── PPR_uid___A001_X12b_X23c.xml
                ├── scriptForImaging.py
                └── scriptForPI.py

11 directories, 36 files
